rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // match /{document=**} {
    //   allow read, write: if true;
    // }

    match /Chat/{id} {
      allow read: if isLoggedIn();
      allow write: if isLoggedIn() && isOwner();
    }

    match /Lists/{userId}/Tasks/{id} {
      allow read: if isLoggedIn() && isOwnerByDocId(userId);
      allow write: if isLoggedIn() && isOwnerByDocId(userId);
    }

    match /Users/{userId} {
      allow read: if true;
      allow write: if false;
    }

    match /Profiles/{userId}/Posts/{id} {
      allow read, write: if true;
    }

    // function existingData() {
    //   return resource.data;
    // }

    // function incomingData() {
    //   return request.resource.data;
    // }

    // function getUserData() {
    //   return get(/Users/$(request.auth.uid))
    //   // if getUserData().roles.keys().hasAny(["editor", "admin"])
    //   // if getUserData().roles.keys().hasAll(["editor", "admin"])
    // }

    // function isOwnerOfDocument() {
    //   // uid of incoming document is same as auth uid
    //   return request.resource.data.uid == request.auth.uid;
    // }

  function isOwnerByDocId(id) {
      return request.auth.uid == id;
    }

    function isOwner() {
      return request.auth.uid == request.resource.data.uid;
    }

    function isLoggedIn() {
      return request.auth != null;
    }

    // function emailVerified() {
    //   return request.auth.token.email_verified;
    // }
  }
}

// /cities/{document=**} = Collection & Subcollections
// /cities/{city} = Collection